{% extends "layout.twig" %}

{% block content %}

<!--<img id="toggle-color" src="../images/sun.png"/>-->

<!-- Flippening Watch Charts Google Ad 1 -->
<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12 ad">
      <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <ins class="adsbygoogle"
          style="display:block"
          data-ad-client="ca-pub-3200453829299141"
          data-ad-slot="6619357522"
          data-ad-format="auto"></ins>
      <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
    </div>
  </div>
</div>

<div id="marketCapRatio_chart" class="container-fluid table-container market-share-comparison">

  <div class="row transparent">
    <div class="col-xs-12">
      <h2>Market Cap Ratio</h2>
      <p>ETH/BTC</p>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12">
      <div class="chart-container">
          <canvas id="marketCapRatio" class="chart"></canvas>
      </div>
    </div>
  </div>

</div>

<!-- Flippening Watch Charts Google Ad 2 -->
<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12 ad full-padding">
      <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
      <ins class="adsbygoogle"
           style="display:block"
           data-ad-client="ca-pub-3200453829299141"
           data-ad-slot="2197014329"
           data-ad-format="auto"></ins>
      <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
    </div>
  </div>
</div>


<div id="marketShareComparison_chart" class="container-fluid table-container market-share-comparison">

  <div class="row transparent">
    <div class="col-xs-12">
      <h2>Market Share</h2>
      <p>ETH, BTC, XRP</p>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12">
      <div class="chart-container">
          <canvas id="marketShareComparison" class="chart"></canvas>
      </div>
    </div>
  </div>

</div>



<!-- Flippening Watch Charts Google Ad 3 -->
<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12 ad full-padding">
      <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
      <ins class="adsbygoogle"
           style="display:block"
           data-ad-client="ca-pub-3200453829299141"
           data-ad-slot="9762797128"
           data-ad-format="auto"></ins>
      <script>
      (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
    </div>
  </div>
</div>

<div id="marketCap_chart" class="container-fluid table-container market-share-comparison">

  <div class="row transparent">
    <div class="col-xs-12">
      <h2>Market Cap</h2>
      <p>ETH vs. BTC</p>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12">
      <div class="chart-container">
          <canvas id="marketCapComparison" class="chart"></canvas>
      </div>
    </div>
  </div>

</div>

<footer>
  <div class="container-fluid">
    <div class="row twitter">
      <div class="col-xs-12">
        <a href="https://twitter.com/flippeningwatch" class="twitter-follow-button" data-size="large" data-show-count="true">Follow @flippeningwatc</a><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12">
        <p>
            <a class="link" href="https://store.flippening.watch" target="_blank"/>STORE</a> |
            <a class="link" href="http://blog.flippening.watch/advertising/" target="_blank">ADVERTISE</a>
        </p>
        <p>
            <a class="link" href="http://blog.flippening.watch/about/" target="_blank">ABOUT</a> |
            <a class="link" href="http://blog.flippening.watch/contact/" target="_blank">CONTACT</a> |
            <a class="link" href="http://blog.flippening.watch/sources-and-formulas/" target="_blank">SOURCES</a>
        </p>
        <p class="copyright">Donate ETH: flippeningwatch.eth</p>
        <p class="copyright">0x00f2d1D2f91AD66Fb9828a0a6c299515aA969743</p>
        <p class="copyright">&copy; 2017 <a href="http://poltavastreet.company/" target="_blank">poltava Street Company</a></p>
      </div>
    </div>
  <div>
</footer>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
<script type="text/javascript" src="../js/moment.js"></script>

<script>

/* graph data */

var pct = 0;

var labelArray = [];
var data_set = [];
var eth_data = [];
var xrp_data = [];

var flippening_ratio = [];

var total_mktcap = [];
var btc_mkt_cap_pct = [];
var eth_mkt_cap_pct = [];
var xrp_mkt_cap_pct = [];

{% for cap in ethdata %}
  eth_data.push({{ cap }});
{% endfor %}

{% for item in dataset %}
      data_set.push( {{ item }} );
{% endfor %}

{% for cap in xrpdata %}
  xrp_data.push({{ cap }});
{%endfor%}

{% for item in total_mktcap_dataset %}
  total_mktcap.push( {{ item }} );
{% endfor %}

{% for time in times %}
      labelArray.push("{{ time }}");
{% endfor %}

/* reverse datasets so the earliest points to most recent points */
labelArray.reverse();
data_set.reverse();
eth_data.reverse();
xrp_data.reverse();
total_mktcap.reverse();


/* create array of flippening ratios */
for (let i = 0; i < data_set.length; i++) {
  let ratio = (eth_data[i]/data_set[i])*100;
  let btc_ratio = (data_set[i]/total_mktcap[i])*100;
  let eth_ratio = (eth_data[i]/total_mktcap[i])*100;
  let xrp_ratio = (xrp_data[i]/total_mktcap[i])*100;
  flippening_ratio.push(ratio);
  btc_mkt_cap_pct.push(btc_ratio);
  eth_mkt_cap_pct.push(eth_ratio);
  xrp_mkt_cap_pct.push(xrp_ratio);
}

/* market cap comparison chart */
var ctx = document.getElementById("marketCapComparison").getContext('2d');
Chart.defaults.global.defaultColor = 'rgba(0,0,0,0)';
Chart.defaults.global.defaultFont = "Raleway";
Chart.defaults.global.defaultFontSize = 14;
Chart.defaults.global.defaultFontColor = '#000';

var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: labelArray,
        datasets: [{
              label: 'ETHEREUM',
              data: eth_data,
              backgroundColor: 'rgba(50,51,51,0.6)',
              borderColor: 'rgba(50,51,51,1)',
              borderWidth: 2,
              pointRadius: 0,
              pointBackgroundColor: 'rgba(50,51,51,0.6)',
              pointBorderColor: 'rgba(50,51,51,0.6)'
          },
          {
            label: 'BITCOIN',
            data: data_set,
            backgroundColor: 'rgba(250,144,57,0.4)',
            borderColor: 'rgba(250,144,57,1)',
            borderWidth: 2,
            pointRadius: 0,
            pointBackgroundColor: 'rgba(250,144,57,0.4)',
            pointBorderColor: 'rgba(250,144,57,0.4)'
          }]
    },
    options: {
      tooltips: {
            mode: 'x',
            intersect: false,
            displayColors: true,
            callbacks: {
              label: function(tooltipItem, data) {
                return "$" + Number(tooltipItem.yLabel).toFixed(0).replace(/./g, function(c, i, a) {
                  return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "," + c : c;
                });
              },
              title: function(tooltipItem, data) {
                newDate = data.labels[tooltipItem[0].index];
                return moment.utc(newDate).format('MMMM Do YYYY');
              }
            }
        },
        elements: {
            line: {
                tension: 0, // disables bezier curves
            }
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true,
                    callback: function(value, index, values) {
                        return '$' + value/1000000000 + "B";
                    }
                }
            }],
            xAxes: [{
              gridLines: {
                color: "#FFFFFF"
              },
              ticks: {
                  callback: function(value, index, values) {
                      return moment.utc(value).format('MM / YYYY');
                  }
              }

            }]
        }
    }
});

/* market cap ratio chart */
var ctxratio = document.getElementById("marketCapRatio").getContext('2d');
var gradient = ctxratio.createLinearGradient(1000, 500, 1000, 200);
gradient.addColorStop(0, '#03fcfe');
gradient.addColorStop(1, '#13ff00');

var newChart = new Chart(ctxratio, {
  type: 'line',
  data: {
    labels: labelArray,
    datasets: [{
      label: '% TO FLIPPENING',
      data: flippening_ratio,
      backgroundColor: '#13ff00',
      borderColor: 'rgba(50,51,51,1)',
      borderWidth: 2,
      pointRadius: 0,
      pointBackgroundColor: gradient,
      pointBorderColor: 'rgba(50,51,51,0.6)'
    }]
  },
  options: {
    tooltips: {
      mode: 'nearest',
      intersect: false,
      displayColors: true,
      callbacks: {
        label: function(tooltipItem, data) {
          return Number(tooltipItem.yLabel).toFixed(1) + "%";
        },
        title: function(tooltipItem, data) {
          newDate = data.labels[tooltipItem[0].index];
          return moment.utc(newDate).format('MMMM Do YYYY');
        }
      }
    },
    elements: {
        line: {
            tension: 0, // disables bezier curves
        }
    },
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero:true,
          max: 100,
          callback: function(value, index, values) {
            return value + "%";
          }
        }
      }],
      xAxes: [{
        gridLines: {
          color: "#FFFFFF"
        },
        ticks: {
          callback: function(value, index, values) {
            return moment.utc(value).format('MM / YYYY');
          }
        }
      }]
    }
  }
});


/* market share chart */
var mksh = document.getElementById("marketShareComparison").getContext('2d');
Chart.defaults.global.defaultColor = 'rgba(0,0,0,0)';
Chart.defaults.global.defaultFont = "Raleway";
Chart.defaults.global.defaultFontSize = 14;
Chart.defaults.global.defaultFontColor = '#000';

var mkshChart = new Chart(mksh, {
  type: 'line',
  data: {
    labels: labelArray,
    datasets: [
      {
        label: 'RIPPLE',
        data: xrp_mkt_cap_pct,
        backgroundColor: 'rgba(0,137,193,1)',
        borderColor: 'rgba(0,85,119,1)',
        borderWidth: 2,
        pointRadius: 0,
        pointBackgroundColor: 'rgba(0,137,193,1)',
        pointBorderColor: 'rgba(0,85,119,1)'
      },
      {
        label: 'ETHEREUM',
        data: eth_mkt_cap_pct,
        backgroundColor: 'rgba(50,51,51,0.6)',
        borderColor: 'rgba(50,51,51,1)',
        borderWidth: 2,
        pointRadius: 0,
        pointBackgroundColor: 'rgba(50,51,51,0.6)',
        pointBorderColor: 'rgba(50,51,51,0.6)'
      },
      {
        label: 'BITCOIN',
        data: btc_mkt_cap_pct,
        backgroundColor: 'rgba(250,144,57,0.4)',
        borderColor: 'rgba(250,144,57,1)',
        borderWidth: 2,
        pointRadius: 0,
        pointBackgroundColor: 'rgba(250,144,57,0.4)',
        pointBorderColor: 'rgba(250,144,57,0.4)'
      }
    ]
  },
  options: {
    tooltips: {
          mode: 'x',
          intersect: false,
          displayColors: true,
          callbacks: {
            label: function(tooltipItem, data) {
              return Number(tooltipItem.yLabel).toFixed(1) + "%";
            },
            title: function(tooltipItem, data) {
              newDate = data.labels[tooltipItem[0].index];
              return moment.utc(newDate).format('MMMM Do YYYY');
            }
          }
      },
      elements: {
          line: {
              tension: 0, // disables bezier curves
          }
      },
      scales: {
          yAxes: [{
            ticks: {
              beginAtZero:true,
              max: 100,
              callback: function(value, index, values) {
                return value + "%";
              }
            }
          }],
          xAxes: [{
            gridLines: {
              color: "#FFFFFF"
            },
            ticks: {
                callback: function(value, index, values) {
                    return moment.utc(value).format('MM / YYYY');
                }
            }

          }]
      }
  }
});



/* price ticker data */
var btc       = {{ api[0] }};
var eth       = {{ api[1] }};
var eth_price = {{ api[2] }};
var btc_price = {{ api[3] }};
var mkt_cap   = {{ api[4] }};

var btc_dom = (btc / mkt_cap) * 100;
var eth_dom = (eth / mkt_cap) * 100;
var pct_dom = (eth / btc) * 100;

eth_price = eth_price.toFixed(2);

$('#eth_price').html("$" + eth_price.toLocaleString('en-US') );
$('#btc_price').html("$" + btc_price.toLocaleString('en-US') );
$('#btc_dom').html("BTC MS: " + btc_dom.toFixed(1) + "%");
$('#eth_dom').html("ETH MS: " + eth_dom.toFixed(1) + "%");
$('#pct_dom').html("ETH/BTC: " + pct_dom.toFixed(1) + "%");

</script>


{% endblock %}
